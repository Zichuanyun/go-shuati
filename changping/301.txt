class Solution {
public:
    vector<string> removeInvalidParentheses(string s) {
        vector<string> ans;
        char tmp[] = {'(',')'};
        remove(s, ans, 0, 0, tmp);
        return ans;
    }
    
    void remove(string s, vector<string> &ans, int last_i, int last_j, char* par) {
        for (int stack = 0, i = last_i; i < s.length(); ++i) {
            if(s[i] == par[0]) stack++;
            if(s[i] == par[1]) stack--;
            if(stack >= 0) continue;
            for (int j = last_j; j <= i; ++j) {
                if (s[j] == par[1] && ( j == last_j || s[j-1] != par[1])) 
                    remove(s.substr(0,j) + s.substr(j + 1, s.length()-j-1), ans, i, j ,par);
            }
            return;
        }
        string reversed = s;
        reverse(reversed.begin(), reversed.end());
        char tmp[] = {')','('};
        if (par[0] == '(')
            remove(reversed, ans, 0, 0, tmp);
        else
            ans.push_back(reversed);
    }
};

