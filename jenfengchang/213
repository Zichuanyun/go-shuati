class Solution {
public:
    int rob(vector<int>& nums) {
        if (nums.size() == 0) 
            return 0;
        if (nums.size() == 1) 
            return nums[0];
        vector<int> dp0(nums.size() + 1, 0);//don't use first
        vector<int> dp1(nums.size() + 1, 0);//don't use last
        dp1[1] = nums[0];
        for (int i = 2; i <= nums.size(); i++) {
            dp0[i] = max(dp0[i - 1], dp0[i - 2] + nums[i - 1]);
            if (i != nums.size()) 
                dp1[i] = max(dp1[i - 1], dp1[i - 2] + nums[i - 1]);
        }
        return max(dp0[nums.size()], dp1[nums.size()-1]);
    }
};
